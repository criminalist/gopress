WordPress是如何加载模板文件的

WordPress系统模板的定义非常方便，但是在定制模板之前，我们有必要知道WordPress的模板层次，了解WordPress是如何加载模板文件的，这将有利于开发模板时合理利用资源及提高工作效率。

万能的index.php

通过“WordPress主题构成”这篇文章，我们已知道一个最简单的WordPress主题只需要 style.css 和 index.php 文件即可。这代表着 index.php 可以是任何一个页面的模板，无论是首页，还是文章页，或是分类页，再或者是搜索结果页面，它都能完美胜任。

也就是说，当对应的模板不存在时， index.php 将是WordPress最后的底牌。

模板加载顺序

下面让我们来了解一下WordPress都是怎么加载模板的

首页

首先WordPress会先检查是否有静态首页，如果有静态首页，就会加载这个页面内容并通过 front-page.php 模板文件展示，如果没有这个模板文件，就会通过页面模板展示
如果没有静态首页，就会加载 home.php  
最新文章模板 如果没有 home.php 则加载 index.php模板
文章页

首先被考虑的是 single-{post_type}.php 这样一个模板文件（如文章类型是 product 那么对应的文件名就是 single-product.php ）
如果找不到，那么就会加载 single.php 模板
如果连 single.php 模板都没有则加载 index.php 模板。
页面

首先被考虑的是自定义模板，也就是编辑页面时所选择的模板
如果没有自定义模板，则查找 page-{slug}.php 别名模板（如页面别名是 about 对应的文件名就是 page-about.php ）
如果别名模板也没有就查找 page-{id}.php ID模板（如页面ID是 2 对应的文件名就是 page-2.php ）
如果ID模板也没有那就是 page.php 模板了
如果连 page.php 模板都没有则加载 index.php 模板
分类页

首先被考虑的是 category-{slug}.php 别名模板（如分类别名是 news 对应的文件名就是 category-news.php ）
如果没有别名模板则查找 category-{id}.php ID模板（如分类ID是 1 对应的文件名就是 category-1.php ）
如果ID模板也没有那就是 category.php 分类模板了
如果 category.php 分类模板也没有则加载 archive.php 通用归档模板
如果连 archive.php 通用归档模板都没有则加载 index.php 模板
标签页

标签页模板加载顺序和分类页一样，只不过前缀不过 category 而是 tag （如 tag-{slug}.php）。
自定义分类法

有时候除了WordPress默认的分类目录和标签我们还需要其他的分类方法，这时候我们就会注册一个新的分类法，那么在此之前知道分类法的模板加载顺序也是十分必要的。以下说明假设自定义分类法是 people 这个名字：

分类法分类页首先被考虑的是 taxonomy-{taxonomy}-{term}.php 别名模板（如分类别名 teacher 对应的文件名就是 taxonomy-people-teacher.php ）
如果没有别名模板，则加载该分类法归档页（如 taxonomy-people.php ）
如果分类法归档页模板也没有则加载 archive.php 通用归档模板
如果连 archive.php 通用归档模板都没有则加载 index.php 模板
自定义文章类型

除了自定义分类法，有时候我们也需要自定义文章类型

自定义文章类型归档页首先被考虑的是 archive-{post_type}.php 别名模板（如文章类型是 product 那么对应的文件名就是 archive-product.php ）
如果没有别名模板则加载 archive.php 通用归档模板
如果连 archive.php 通用归档模板都没有则加载 index.php 模板
作者归档页

首先被考虑的是 author-{nicename}.php 别名模板（如作者用户名是 steven 那么对应的文件名就是 author-steven.php ）
如果没有别名模板则加载 author-{id}.php ID模板（如作者ID是 1 对应的文件名就是 author-1.php ）
如果ID模板没有则加载 author.php 通用作者模板
如果通用作者模板也没有则加载 archive.php 通用归档模板
如果连 archive.php 通用归档模板都没有则加载 index.php模板
日期归档页

首先被考虑的是 date.php 日期归档模板
如果日期归档模板没有则加载 archive.php 通用归档模板
如果连 archive.php 通用归档模板都没有则加载 index.php 模板
搜索结果页

首先被考虑的是 search.php 搜索结果模板
如果没有搜索结果模板则加载 index.php模板
附件页

首先会按MIME类型加载模板（如 image.php, video.php, application.php，而 text/plain 类型则按顺序尝试加载 text.php, plain.php, text_plain.php 这三个文件。
如果没有对应的MIME类型模板则 attachment.php 附件模板（如没有 attachment.php 则加载 single-attachment.php ）
如果没有附件模板则加载 single.php 文章页模板
如果连 single.php 文章页模板都没有则加载 index.php 模板

模板层次图

上面用文字详细讲述了WordPress模板的加载顺序，尽管详细，但还不如一张信息图更为直观，以下就是WordPress的模板层次结构图。

1421995372_42

使用钩子修改模板

在某些使用场景（如插件），我们并不能直接修改模板文件，这时候我们可以使用钩子来实现修改模板文件，钩子名称是 {$type}_template 这样的格式，以下是对应的完整的钩子名称列表：

index_template
404_template
archive_template
author_template
category_template
tag_template
taxonomy_template
date_template
home_template
front_page_template
page_template
paged_template
search_template
single_template
text_template, plain_template, text_plain_template (all mime types)
attachment_template
comments_popup
以下是一个使用例子（让页面加载 single.php 文章页的模板）：

function page_template_filter( $templates=''){
$templates=locate_template("single.php",false);
return $templates;
}
add_filter('page_template','page_template_filter');
模板页面判断

一般情况下，在一个特定的模板中我们能清楚知道应该怎么输出特定的样式和内容，但在一些通用模板中（如 header.php ）我们想要知道用户当前访问的是哪个页面模板就需要借助WordPress内置的条件判断函数了，这些函数可以帮助我们判断当前是什么页面以方便加载不同的模板内容，如 is_home() 则是判断首页的条件标签，is_single() 则是判断文章页的条件标签，等等。

/////////////////////////////////////////////////////////////////////
首页
对于每一个网站，这是第一,也是最重要的一个页面。所以WP提供了极大的范围来让你定制这个页面。让我们看看这个用于显示首页的文件的层次。
front-page.php
home.php
index.php
当客户端请求主页时,WP将搜索front-page.php。 如果不存在,它将会使用home.php。如果 home.php存在,它会用到它。否则,它会默认采用index.php。
单篇日志
single-[post-type].php
single.php
index.php
只要你需要，WordPress可以有各种日志类型。这将会更容易使得所有/一些日志类型可以有不同的设计。默认情况下“post”是WP主要和默认的日志类型。
这样，举例来说,如果你的自定义日志类型是 product ,那么它的模板将会是single-product.php
了解更多如何添加新日志类型,你可以参考这个链接。
单个静态页面
其实这个在WP里面就叫page,这里翻译成中文后反倒不好分清了。
[custom-template].php
page-[slug].php
page-[id].php
page.php
index.php
 
与post类型一样,类型,我们可以使用自定义页模板让page类型的页面有不同的页面布局。WP首先搜索指定的页面模板文件(如果存在)。
如果没有找到,它将寻找带有当前页面别名(slug)的模板文件。基本上,如果别名是aboutus,那么它将在当前主题文件夹中搜索文件page-aboutus.php。
WP将像搜索别名页面模板一样搜索文件ID模板。
分类
category-[slug].php
category-[id].php
category.php
archive.php
index.php
我相信，如果你已经看完了上面的话，这里应该不用我解释了。文件搜索规则是一样的。
标签
tag-[slug].php
tag-[id].php
tag.php
archive.php
index.php
其它分类（Taxonomy）
taxonomy-[tax]-[term].php
taxonomy-[tax].php
taxonomy.php
archive.php
index.php
这里原文并没有做多少解释。但个人觉得这里要稍微解释下。什么是taxonomy?它的英文意思很简单，就是“分类”。但是在WP里面仅这么说的话，我相应很多人还是会一头雾水。还有，什么是term ? term 的英文意思是术语。
在WP里面，term可以是post_tag(日志标签)、link_category（链接类别）、category(日志分类）及任何其它自定义的分 类。例如，自定义了一个名为book(书籍，自定义日志类型）的日志类型，可以把 writer(作家)作为taxonomy ,那么作家的名字，如 hanhan (韩寒），就是term之一，一个taxonomy下可以有很多term.也就是说，taxonomy是term的一个集合。这样，我们就可以有 taxonomy-writer-hanhan.php 作为显示韩寒的书籍分类页面的模板，taxonomy-writer.php 作为显示书籍分类的模板。
作者
author-[author-nicname].php
author-[author-id].php
author.php
archive.php
index.php
附件
[mime-type].php
attachment.php
single.php
index.php
日期
date.php
archive.php
index.php
存档
archive.php
index.php
搜索
search.php
index.php
搜索模板用于显示搜索结果。
404页面
404.php
index.php

//////////////////////////////////////////////////////////////////
create_sites	Y					
delete_sites	Y					
manage_network	Y					
manage_sites	Y					
manage_network_users	Y					
manage_network_plugins	Y					
manage_network_themes	Y					
manage_network_options	Y					
upload_plugins	Y					
upload_themes	Y					
Capability	Super Admin	Administrator	Editor	Author	Contributor	Subscriber
activate_plugins	Y	Y 
(single site or 
enabled by network setting)				
create_users	Y	Y (single site)				
delete_plugins	Y	Y (single site)				
delete_themes	Y	Y (single site)				
delete_users	Y	Y (single site)				
edit_files	Y	Y (single site)				
edit_plugins	Y	Y (single site)				
edit_theme_options	Y	Y				
edit_themes	Y	Y (single site)				
edit_users	Y	Y (single site)				
export	Y	Y				
import	Y	Y				
Capability	Super Admin	Administrator	Editor	Author	Contributor	Subscriber
install_plugins	Y	Y (single site)				
install_themes	Y	Y (single site)				
list_users	Y	Y				
manage_options	Y	Y				
promote_users	Y	Y				
remove_users	Y	Y				
switch_themes	Y	Y				
update_core	Y	Y (single site)				
update_plugins	Y	Y (single site)				
update_themes	Y	Y (single site)				
edit_dashboard	Y	Y				
customize	Y	Y				
delete_site	Y	Y				
Capability	Super Admin	Administrator	Editor	Author	Contributor	Subscriber
moderate_comments	Y	Y	Y			
manage_categories	Y	Y	Y			
manage_links	Y	Y	Y			
edit_others_posts	Y	Y	Y			
edit_pages	Y	Y	Y			
edit_others_pages	Y	Y	Y			
edit_published_pages	Y	Y	Y			
publish_pages	Y	Y	Y			
delete_pages	Y	Y	Y			
delete_others_pages	Y	Y	Y			
delete_published_pages	Y	Y	Y			
delete_others_posts	Y	Y	Y			
delete_private_posts	Y	Y	Y			
edit_private_posts	Y	Y	Y			
read_private_posts	Y	Y	Y			
delete_private_pages	Y	Y	Y			
edit_private_pages	Y	Y	Y			
read_private_pages	Y	Y	Y			
unfiltered_html	Y	Y (single site)	Y (single site)			
Capability	Super Admin	Administrator	Editor	Author	Contributor	Subscriber
edit_published_posts	Y	Y	Y	Y		
upload_files	Y	Y	Y	Y		
publish_posts	Y	Y	Y	Y		
delete_published_posts	Y	Y	Y	Y		
edit_posts	Y	Y	Y	Y	Y	
delete_posts	Y	Y	Y	Y	Y	
Capability	Super Admin	Administrator	Editor	Author	Contributor	Subscriber
read
